# Generated by Django 4.2 on 2025-06-18 22:51

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Beklemede'), ('processing', 'İşleniyor'), ('completed', 'Tamamlandı'), ('cancelled', 'İptal Edildi'), ('failed', 'Başarısız')], default='pending', max_length=20)),
                ('payment_method', models.CharField(choices=[('balance', 'Bakiye'), ('credit_card', 'Kredi Kartı'), ('bank_transfer', 'Havale'), ('mobile_payment', 'Mobil Ödeme')], max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('final_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payment_status', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('balance', 'Bakiye'), ('credit_card', 'Kredi Kartı'), ('bank_transfer', 'Havale'), ('mobile_payment', 'Mobil Ödeme')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('external_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('external_status', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('pending', 'Beklemede'), ('processing', 'İşleniyor'), ('success', 'Başarılı'), ('failed', 'Başarısız'), ('cancelled', 'İptal Edildi'), ('refunded', 'İade Edildi')], default='pending', max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='orders.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('delivery_status', models.CharField(choices=[('pending', 'Beklemede'), ('delivered', 'Teslim Edildi'), ('failed', 'Başarısız')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_keys', models.ManyToManyField(blank=True, to='products.productkey')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
        ),
    ]
